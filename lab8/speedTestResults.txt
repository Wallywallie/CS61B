 This program inserts lexicographically increasing Stringsinto Maps as <String, Integer> pairs.

Enter # strings to insert into hashmap.ULLMap: 100000
--Stack Overflow -- couldn't add 100000 strings.

Enter # strings to insert into hashmap.MyHashMap: 100000
class hashmap.MyHashMap: 0.18 sec

Enter # strings to insert into Java's HashMap: 100000
Java's Built-in HashMap: 0.07 sec

Would you like to try more timed-tests? (y/n): y

Enter # strings to insert into hashmap.ULLMap: 50000
--Stack Overflow -- couldn't add 50000 strings.

Enter # strings to insert into hashmap.MyHashMap: 50000
class hashmap.MyHashMap: 0.04 sec

Enter # strings to insert into Java's HashMap: 50000
Java's Built-in HashMap: 0.03 sec

Would you like to try more timed-tests? (y/n): y

Enter # strings to insert into hashmap.ULLMap: 10000
class hashmap.ULLMap: 0.43 sec

Enter # strings to insert into hashmap.MyHashMap: 10000
class hashmap.MyHashMap: 0.01 sec

Enter # strings to insert into Java's HashMap: 10000
Java's Built-in HashMap: 0.00 sec

Would you like to try more timed-tests? (y/n): n

----------------------------------------------------

 This program inserts random Strings of length L
 Into different types of maps as <String, Integer> pairs.

What would you like L to be?: 10

Enter # strings to insert into hashmap.ULLMap: 100000
--Stack Overflow -- couldn't add 100000 strings of length 10.

Enter # strings to insert into your hashmap.MyHashMap: 100000
class hashmap.MyHashMap: 0.20 sec

Enter # strings to insert into Java's HashMap: 100000
Java's Built-in HashMap: 0.07 sec

Would you like to try more timed-tests? (y/n)y

Enter # strings to insert into hashmap.ULLMap: 50000
--Stack Overflow -- couldn't add 50000 strings of length 10.

Enter # strings to insert into your hashmap.MyHashMap: 50000
class hashmap.MyHashMap: 0.06 sec

Enter # strings to insert into Java's HashMap: 50000
Java's Built-in HashMap: 0.02 sec

Would you like to try more timed-tests? (y/n)y

Enter # strings to insert into hashmap.ULLMap: 10000
class hashmap.ULLMap: 0.36 sec

Enter # strings to insert into your hashmap.MyHashMap: 10000
class hashmap.MyHashMap: 0.00 sec

Enter # strings to insert into Java's HashMap: 10000
Java's Built-in HashMap: 0.00 sec

Would you like to try more timed-tests? (y/n)n

------------------------------------------------------

 This program inserts random Strings of length L
 Into different types of maps as <String, Integer> pairs.

What would you like L to be?: 10

Enter # strings to insert into each map: 100000
class hashmap.MyHashMapALBuckets: 0.17 sec
class hashmap.MyHashMapLLBuckets: 0.14 sec
class hashmap.MyHashMapTSBuckets: 0.30 sec
class hashmap.MyHashMapHSBuckets: 0.24 sec
class hashmap.MyHashMapPQBuckets: 0.29 sec

Would you like to try more timed-tests? (y/n)y

Enter # strings to insert into each map: 50000
class hashmap.MyHashMapALBuckets: 0.02 sec
class hashmap.MyHashMapLLBuckets: 0.03 sec
class hashmap.MyHashMapTSBuckets: 0.09 sec
class hashmap.MyHashMapHSBuckets: 0.11 sec
class hashmap.MyHashMapPQBuckets: 0.08 sec

Would you like to try more timed-tests? (y/n)y

Enter # strings to insert into each map: 10000
class hashmap.MyHashMapALBuckets: 0.00 sec
class hashmap.MyHashMapLLBuckets: 0.00 sec
class hashmap.MyHashMapTSBuckets: 0.01 sec
class hashmap.MyHashMapHSBuckets: 0.01 sec
class hashmap.MyHashMapPQBuckets: 0.01 sec